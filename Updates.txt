Update 1 :  [run_java.py]
            Removal of redundant code from run_java.py file.

Update 2 :  [run_java.py]
            Now any valid class name can used for the class containing main function in java programmig language.
            Previously, class containing main method can only be named as 'Main'.

Update 3 :  [run_java.py]
            'finally' is replaced with 'if' statement, resolving "classpath referenced before assignment" error.
            Because the finally statement is getting executed and looking for classpath to delete the files with '.class' extention although because of the error in the code, classpath was not getting created as compilation was not done and '.class' files are not created.
            And was displaying "classpath referenced before assignment" error instead of showing the syntax or compilation error.
            Now, if statement will be executed only when there will be valid classpath, and the error in the execution, compilation or syntax will be displayed in the result to the user.

Update 4 :  [run_java.py]
            Now, it checks for both valid main method signatures, that are, 'public static void main(String[] args)' and 'public static void main(String args[])'.
            Earlier, only code with 'public static void main(String[] args)' line was getting excepting and for the second case 'Main method not found in the Java file' error was occuring.

Update 5 :  [run_java.py]
            Now, accepts the cases 'public static void main (String[] args)' in line or 'public static void main (String args[])' also.
            There is space between 'main' and '()'.
